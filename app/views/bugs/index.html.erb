<script type="text/javascript">

  var game = new Phaser.Game(1024, 768, Phaser.AUTO, '', { preload: preload, create: create, update: update, render: render });



  function preload(){

    game.load.spritesheet('dude', '/images/dude.png', 32, 48);

    // main images for world
    game.load.image('background', '/images/background.png');
    game.load.image('backgroundKey', '/images/background_key.png');
    game.load.image('log1', '/images/log_1.png');
    game.load.image('log2', '/images/log_2.png');
    game.load.image('log3', '/images/log_3.png');
    game.load.image('log4', '/images/log_4.png');
    game.load.image('sawmill', '/images/sawmill.png');
    game.load.image('wheel', '/images/wheel.png');
    game.load.image('cloud1', '/images/cloud_1.png');
    game.load.image('cloud2', '/images/cloud_2.png');
    game.load.image('cloud3', '/images/cloud_3.png');
    game.load.image('cloud4', '/images/cloud_4.png');
    game.load.image('cloud5', '/images/cloud_5.png');
    game.load.image('cloud6', '/images/cloud_6.png');
    game.load.image('tree', '/images/tree.png');
    game.load.image('grass1', '/images/grass_1.png');
    game.load.image('grass2', '/images/grass_2.png');
    game.load.image('grass3', '/images/grass_3.png');
    game.load.image('grass4', '/images/grass_4.png');
    game.load.image('rock1', '/images/rock_1.png');
    game.load.image('rock2', '/images/rock_2.png');
    // level 1 images
    game.load.image('levelOneBackground', '/images/level_1_background.png');
    game.load.image('acorn1', '/images/acorn_1.png');
    game.load.image('acorn2', '/images/acorn_2.png');
    game.load.image('acorn3', '/images/acorn_3.png');
    game.load.image('acorn4', '/images/acorn_4.png');
    game.load.image('acorn5', '/images/acorn_5.png');
    game.load.image('branch1', '/images/branch_1.png');
    game.load.image('branch2', '/images/branch_2.png');
    game.load.image('branch3', '/images/branch_3.png');
    game.load.image('branch4', '/images/branch_4.png');
    game.load.image('cobweb', '/images/cobweb.png');
    game.load.image('spider', '/images/spider.png');
    // level 2 images
    // game.load.image('webstring', '/images/webstring');
    // game.load.spritesheet('hangingspider', '/images/hangingspider');
    // game.load.spritesheet('frogmouth', '/images/frogmouth');
    // level 3 images
    game.load.image('smilingfrog', '/images/frog_mouth_open.png');
    game.load.image('frog', '/images/frog_mouth_closed.png');
    // game.load.spritesheet('frogtongue', '/images/frogtongue');
    // game.load.spritesheet('fly1', '/images/fly1');
    // game.load.spritesheet('fly2', '/images/fly2');
    // game.load.spritesheet('bird1', '/images/bird1');
    // level 4 images
    // game.load.image('crosshair', '/images/crosshair');
    // game.load.spritesheet('bird2', '/images/bird2');
    // game.load.spritesheet('bird3', '/images/bird3');
    // game.load.spritesheet('fallingbird', '/images/fallingbird');
  }

  var platforms;

  function create(){

    game.physics.startSystem(Phaser.Physics.ARCADE);

    game.add.image(0, 0, 'background');

    game.add.image(0, 15, 'cloud1');

    game.add.image(0, 380, 'cloud2');

    game.add.image(335, 85, 'cloud3');

    game.add.image(595, 270, 'cloud4');

    game.add.image(650, 30, 'cloud5');

    game.add.image(854, 258, 'cloud6');

    game.add.image(25, 40, 'tree');

    game.add.image(760, 415, 'sawmill');

    spinningWheel = game.add.image(1000, 620, 'wheel');
    spinningWheel.anchor.setTo(0.5, 0.5);

    platforms = game.add.group();

    platforms.enableBody = true;

    acorns = game.add.group();

    acorns.enableBody = true;

    var ground = platforms.create(0, game.world.height -5, 'log1');

    var rock1 = platforms.create(500, 640, 'rock1');

    rock1.body.immovable = true;

    var rock2 = platforms.create(100, 640, 'rock2');

    rock2.body.immovable = true;

    ground.scale.setTo(50,3);

    ground.body.immovable = true;

    cursors = game.input.keyboard.createCursorKeys();

    var tid = setTimeout(logFloat);
    function logFloat() {
    ledge = platforms.create(1100, 685, 'log1');
    ledge.body.immovable = true;
    ledge.body.velocity.x = -90;
    ledge = platforms.create(1500, 680, 'log3');
    ledge.body.immovable = true;
    ledge.body.velocity.x = -92;
    ledge = platforms.create(1900, 680, 'log4');
    ledge.body.immovable = true;
    ledge.body.velocity.x = -88;
    ledge = platforms.create(2250, 689, 'log2');
    ledge.body.immovable = true;
    ledge.body.velocity.x = -91;
    tid = setTimeout(logFloat, 17000); // repeat myself
    }

    acorn = ''

    // var nuts = setTimeout(acornBounce);
    // function acornBounce() {
    // acorn = acorns.create(0, 0, 'acorn1');
    // acorn.body.velocity.x = 500;
    // acorn.body.bounce.y = 0.1;
    // acorn.body.gravity.y = 1000;
    // nuts = setTimeout(acornBounce, 2000000); // repeat myself
    // }

    frog = game.add.sprite(180, game.world.height - 1000, 'dude')
    game.physics.arcade.enable(frog);

    frog.body.bounce.y = 0.1;
    frog.body.gravity.y = 1000;
    frog.body.collideWorldBounds = true;

    frog.animations.add('left', [0, 1, 2], 6, true);
    frog.animations.add('right', [3, 4, 5], 6, true);

    game.physics.arcade.enable(acorn);

    frog.body.collideWorldBounds = true;

    cursors = game.input.keyboard.createCursorKeys();

  }

  function update(){

    spinningWheel.angle += 1;

    game.physics.arcade.collide(frog, platforms);
    game.physics.arcade.collide(acorn, platforms);
    game.physics.arcade.collide(acorn, frog);
    game.physics.arcade.collide(frog, spinningWheel)

    if (frog.body.touching.down)
    {
    frog.body.velocity.x = 0;
    }

    if (cursors.left.isDown && frog.body.touching.down)
    {
      // hop frog to left
      frog.body.velocity.y = -100

      frog.body.velocity.x = -200

      frog.animations.play('left');
    }
    else if (cursors.right.isDown && frog.body.touching.down)
    {
      // hop frog right
      frog.body.velocity.y = -100

      frog.body.velocity.x = 200

      frog.animations.play('right');

    }
    else
    {
      frog.animations.stop();

      frog.frame = 4;
    }

    if (cursors.up.isDown && frog.body.touching.down)
    {
      frog.body.velocity.y = -450;
      if (cursors.left.isDown)
      {
        frog.body.velocity.x = -200

        frog.animations.play('left');
      }
      else if (cursors.right.isDown)
      {
        frog.body.velocity.x = 200

        frog.animations.play('right');
      }
    }

  }

  function render(){

    game.debug.cameraInfo(game.camera, 32, 32);

  }


  </script>




