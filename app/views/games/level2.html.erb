<script type="text/javascript">

  var game = new Phaser.Game(1024, 768, Phaser.AUTO, '', { preload: preload, create: create, update: update, render: render });

  function preload(){
    var images = {
        'tree': '/images/tree.png',
        
    }

    game.load.spritesheet('dude', '/images/dude.png', 32, 48);

    game.load.image('tree', '/images/tree.png');
    game.load.image('greenBackdrop', '/images/green_backdrop.png');
    game.load.image('level2background', '/images/tree.png');
    game.load.image('acorn1', '/images/acorn_1.png');
    game.load.image('acorn2', '/images/acorn_2.png');
    game.load.image('acorn3', '/images/acorn_3.png');
    game.load.image('acorn4', '/images/acorn_4.png');
    game.load.image('acorn5', '/images/acorn_5.png');
    game.load.image('branch1', '/images/h_branch_1.png');
    game.load.image('branch2', '/images/h_branch_2.png');
    game.load.image('branch3', '/images/h_branch_3.png');
    game.load.image('branch4', '/images/h_branch_4.png');
    game.load.image('spider', '/images/spider_bigger_face.png');
    // level 2 images
    // game.load.image('webstring', '/images/webstring');
    // game.load.spritesheet('hangingspider', '/images/hangingspider');
    // game.load.spritesheet('spidermouth', '/images/spidermouth');
    // level 3 images
    game.load.image('smilingFrog', '/images/frog_mouth_open.png');
    game.load.image('frog', '/images/frog_mouth_closed.png');
    // game.load.spritesheet('spidertongue', '/images/spidertongue');
    // game.load.spritesheet('fly1', '/images/fly1');
    // game.load.spritesheet('fly2', '/images/fly2');
  }

  var platforms;

  function create(){

    game.physics.startSystem(Phaser.Physics.ARCADE);

    // tree = game.add.image(-3300, -9000, 'level2background');
    // tree.scale.x = game.rnd.realInRange(19, 19);
    // tree.scale.y = game.rnd.realInRange(19, 19);

    tree = game.add.image(0,0, 'greenBackdrop');
    tree.scale.x = game.rnd.realInRange(6, 6);
    tree.scale.y = game.rnd.realInRange(6, 6);

    platforms = game.add.group();

    platforms.enableBody = true;

    cursors = game.input.keyboard.createCursorKeys();


    spider = game.add.sprite(780, game.world.height - 1000, 'spider')
    spider.scale.x = game.rnd.realInRange(.6, .6);
    spider.scale.y = game.rnd.realInRange(.6, .6);
    game.physics.arcade.enable(spider);

    spider.body.gravity.y = 10;
    spider.body.collideWorldBounds = true;

    // spider.animations.add('left', [0, 1, 2], 6, true);
    // spider.animations.add('right', [3, 4, 5], 6, true);

    cursors = game.input.keyboard.createCursorKeys();

    // set interval
    function createBranches(x, y, image, size, yVelocity){
        ledge = platforms.create(x, y, image);
        ledge.scale.x = game.rnd.realInRange(size, size);
        ledge.scale.y = game.rnd.realInRange(size, size);
        ledge.body.immovable = true;
        ledge.body.velocity.y = yVelocity;
    }


    branches();
    function branches() {
    // left side
    createBranches(0, 800, 'branch4', 2, -250);
    // right side
    createBranches(410, 1200, 'branch3', 2, -250);
    // left side
    createBranches(0, 1600, 'branch2', 2, -250);
    // right side
    createBranches(410, 2000, 'branch1', 2, -250);
    // left side
    createBranches(0, 2400, 'branch4', 2, -250);
    // right side
    createBranches(410, 2800, 'branch3', 2, -250);
    // left side
    createBranches(0, 3200, 'branch2', 2, -250);
    // left side
    createBranches(0, 3600, 'branch4', 2, -250);
    // end of wave one

    // left side
    createBranches(-40, 5800, 'branch4', 2, -350);
    // right side
    createBranches(450, 6300, 'branch3', 2, -350);
    // left side
    createBranches(-40, 6800, 'branch2', 2, -350);
    // right side
    createBranches(450, 7300, 'branch1', 2, -350);
    // left side
    createBranches(-40, 7800, 'branch4', 2, -350);
    // right side
    createBranches(450, 8300, 'branch1', 2, -350);
    // right side
    createBranches(450, 8800, 'branch3', 2, -350);
    // left side
    createBranches(-40, 9300, 'branch2', 2, -350);
    // right side
    createBranches(450, 9800, 'branch1', 2, -350);
    // end of wave 2

    // left side
    createBranches(-75, 13700, 'branch4', 2, -450);
    // right side
    createBranches(485, 14300, 'branch3', 2, -450);
    // left side
    createBranches(-75, 14900, 'branch2', 2, -450);
    // right side
    createBranches(485, 15500, 'branch1', 2, -450);
    // right side
    createBranches(485, 16100, 'branch3', 2, -450);
    // left side
    createBranches(-75, 16700, 'branch4', 2, -450);
    // right side
    createBranches(485, 17300, 'branch3', 2, -450);
    //frog

    }

  }

  function update(){

    
    game.physics.arcade.collide(spider, platforms);
    // game.physics.arcade.collide(acorn, platforms);
    // game.physics.arcade.collide(acorn, spider);

    if (spider.body.touching.down)
    {
    spider.body.velocity.x = 0;
    }

    if (cursors.left.isDown)
    {
      //  spider to left
      if (spider.body.touching.down)
      {
      spider.body.velocity.x = -150
      }
      else
      {
      spider.body.velocity.x = -400
      }
    }
    else if (cursors.right.isDown)
    {
      //  spider right
      if (spider.body.touching.down)
      {
      spider.body.velocity.x = 150
      }
      else
      {
      spider.body.velocity.x = 400
      }
    }
    else
    {
      spider.animations.stop();

      spider.frame = 4;
    }

    if (cursors.up.isDown && !spider.body.touching.down)
    {
      spider.body.velocity.y = -200;
    }
    else if (cursors.down.isDown)
    {
      spider.body.velocity.y = 200;
    }

  }

  function render(){


  }

  </script>