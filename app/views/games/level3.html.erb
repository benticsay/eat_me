<script type="text/javascript">

  var game = new Phaser.Game(1024, 768, Phaser.AUTO, '', { preload: preload, create: create, update: update, render: render });

  function preload(){

// ******************* MAX CHANGES *******************
    // minLogSize = 1000;

    // var levelLogs = [
    //     createLog(minLogSize + 500, 600, 'log1', 1.87, -90),
    //     createLog(minLogSize + 450, 600, 'log1', 1.87, -90)
    // ]

    game.load.spritesheet('dude', '/images/dude.png', 32, 48);
    game.load.image('invisible_line', '/images/blank_line.png');
    game.load.image('invisible_line', '/images/invisible_line.png');


    // main images for world
    game.load.image('background', '/images/level_3_background.png');
    game.load.image('backgroundKey', '/images/background_key.png');
    game.load.image('log1', '/images/log_1.png');
    game.load.image('log2', '/images/log_2.png');
    game.load.image('log3', '/images/log_3.png');
    game.load.image('log4', '/images/log_4.png');
    game.load.image('sawmill', '/images/sawmill.png');
    game.load.image('wheel', '/images/wheel.png');
    game.load.image('cloud1', '/images/cloud_1.png');
    game.load.image('cloud2', '/images/cloud_2.png');
    game.load.image('cloud3', '/images/cloud_3.png');
    game.load.image('cloud4', '/images/cloud_4.png');
    game.load.image('cloud5', '/images/cloud_5.png');
    game.load.image('cloud6', '/images/cloud_6.png');
    game.load.image('tree', '/images/tree.png');
    game.load.image('grass1', '/images/grass_1.png');
    game.load.image('grass2', '/images/grass_2.png');
    game.load.image('grass3', '/images/grass_3.png');
    game.load.image('grass4', '/images/grass_4.png');
    game.load.image('rock1', '/images/rock_1.png');
    game.load.image('rock2', '/images/rock_2.png');
    game.load.image('water', '/images/water copy.png');
    // level 1 images
    // game.load.spritesheet('frogmouth', '/images/frogmouth');
    // level 3 images
    game.load.image('smilingfrog', '/images/frog_mouth_open.png');
    game.load.image('frog', '/images/frog_mouth_closed.png');
    game.load.spritesheet('fly', '/images/Tiny_flies_sheet.png', 19, 18);
    game.load.spritesheet('player_bird', '/images/bird sprite10-1.png', 84, 80)
    // game.load.spritesheet('frogtongue', '/images/frogtongue');
    // game.load.spritesheet('fly1', '/images/fly1');
    // game.load.spritesheet('fly2', '/images/fly2');
    // game.load.spritesheet('bird1', '/images/bird1');
    // level 4 images
    // game.load.spritesheet('bird2', '/images/bird2');
    // game.load.spritesheet('bird3', '/images/bird3');
    // game.load.spritesheet('fallingbird', '/images/fallingbird');
  }

  var platforms;
  var logs;
  var flyCount;

  function create(){

    flyCount = 0

    game.physics.startSystem(Phaser.Physics.ARCADE);

    background = game.add.image(-100, 0, 'background');
    background.scale.x = game.rnd.realInRange(1.87, 1.87);
    background.scale.y = game.rnd.realInRange(1.87, 1.87);

    // cloud1 = game.add.image(0, 15, 'cloud1');
    // cloud1.anchor.setTo(-.1, -.1);

    // cloud2 = game.add.image(0, 380, 'cloud2');
    // cloud2.anchor.setTo(-.1, -.1);

    // cloud3 = game.add.image(335, 85, 'cloud3');
    // cloud3.anchor.setTo(-.1, -.1);

    // cloud4 = game.add.image(595, 270, 'cloud4');
    // cloud4.anchor.setTo(-.1, -.1);

    // cloud5 = game.add.image(650, 30, 'cloud5');
    // cloud5.anchor.setTo(-.1, -.1);

    // cloud6 = game.add.image(854, 258, 'cloud6');
    // cloud6.anchor.setTo(-.1, -.1);

    // game.add.image(235, 535, 'grass3');

    // game.add.image(25, 40, 'tree');

    // game.add.image(760, 415, 'sawmill');

    // game.add.image(50, 540, 'grass1');

    // game.add.image(455, 540, 'grass2');

    // game.add.image(655, 560, 'grass4');

    game.add.image(105, 560, 'rock1');

    game.add.image(480, 570, 'rock2');

    platforms = game.add.group();

    platforms.enableBody = true;

    logs = game.add.group();

    logs.enableBody = true;

    var ground = platforms.create(0, game.world.height -5, 'whatever');

    var ledge = platforms.create(140, 595, 'invisible_line');

    ledge.body.immovable = true;

    var ledge = platforms.create(505, 605, 'invisible_line');


    ledge.body.immovable = true;
    ledge.scale.x = game.rnd.realInRange(1.3, 1.3);

    ground.scale.setTo(50,3);

    ground.body.immovable = true;

    cursors = game.input.keyboard.createCursorKeys();

    log = logs.create(500, 600, 'log1');
    log.scale.x = game.rnd.realInRange(1.87, 1.87);
    log.scale.y = game.rnd.realInRange(1.87, 1.87);
    log.body.immovable = true;
    log.body.velocity.x = -90;
    ledge = platforms.create(520, 620, 'invisible_line');
    ledge.scale.x = game.rnd.realInRange(1.6, 1.6);
    ledge.body.immovable = true;
    ledge.body.velocity.x = -90;

    game.time.events.loop(Phaser.Timer.SECOND * 25, logFloat, this);
    
    logFloat();
    
    // ***************** ADDED BY MAX ********************

    function createLog(x, y, image, size, xVelocity) {
        log = logs.create(x, y, image);
        log.scale.x = game.rnd.realInRange(size, size);
        log.scale.y = game.rnd.realInRange(size, size);
        log.body.immovable = true;
        log.body.velocity.x = xVelocity;        
    }

    function logFloat() {
        createLog(1100, 600, 'log1', 1.87, -90);

        log = logs.create(1100, 600, 'log1');
        log.scale.x = game.rnd.realInRange(1.87, 1.87);
        log.scale.y = game.rnd.realInRange(1.87, 1.87);
        log.body.immovable = true;
        log.body.velocity.x = -90;

        log = logs.create(1700, 570, 'log3');
        log.scale.x = game.rnd.realInRange(1.87, 1.87);
        log.scale.y = game.rnd.realInRange(1.87, 1.87);
        log.body.immovable = true;
        log.body.velocity.x = -92;

        log = logs.create(2300, 585, 'log4');
        log.scale.x = game.rnd.realInRange(1.87, 1.87);
        log.scale.y = game.rnd.realInRange(1.87, 1.87);
        log.body.immovable = true;
        log.body.velocity.x = -88;
        log = logs.create(2900, 600, 'log2');
        log.scale.x = game.rnd.realInRange(1.87, 1.87);
        log.scale.y = game.rnd.realInRange(1.87, 1.87);
        log.body.immovable = true;
        log.body.velocity.x = -91;
        ledge = platforms.create(1120, 620, 'invisible_line');
        ledge.scale.x = game.rnd.realInRange(1.6, 1.6);
        ledge.body.immovable = true;
        ledge.body.velocity.x = -90;
        ledge = platforms.create(1720, 620, 'invisible_line');
        ledge.scale.x = game.rnd.realInRange(2.75, 2.75);
        ledge.body.immovable = true;
        ledge.body.velocity.x = -92;
        ledge = platforms.create(2320, 620, 'invisible_line');
        ledge.scale.x = game.rnd.realInRange(2, 2);
        ledge.body.immovable = true;
        ledge.body.velocity.x = -88;
        ledge = platforms.create(2910, 620, 'invisible_line');
        ledge.scale.x = game.rnd.realInRange(1.6, 1.6);
        ledge.body.immovable = true;
        ledge.body.velocity.x = -91;
    }


    frog = game.add.sprite(150, game.world.height - 300, 'smilingfrog')
    game.add.image(-525, 625, 'water');

    frog.scale.x = game.rnd.realInRange(.25, .25);
    frog.scale.y = game.rnd.realInRange(.25, .25);
    game.physics.arcade.enable(frog);
    frog.body.bounce.y = 0.1;
    frog.body.gravity.y = 1000;
    frog.body.collideWorldBounds = true;
    // frog.animations.add('left', [0, 1, 2], 6, true);
    // frog.animations.add('right', [3, 4, 5], 6, true);

    // //adding bird of prey
    // birdie = game.add.sprite(400, 0, 'player_bird');
    // birdie.scale.x = game.rnd.realInRange(2, 2);
    // birdie.scale.y = game.rnd.realInRange(2, 2);
    // game.physics.arcade.enable(birdie);
    // birdie.enableBody = true;
    // birdie.body.immovable = true;
    // birdie.body.collideWorldBounds = true;
    // birdie.body.velocity.x = -180;
    // birdie.body.bounce.setTo(1, 1);
    // birdie.animations.add('left', [0, 1, 2], 6, true);
    // birdie.animations.add('right', [9, 10, 11], 6, true);
    // birdie.animations.add('up', [21, 22, 23], 6, true);
    // birdie.animations.add('down', [18, 19, 20], 6, true);
    // birdie.animations.add('left_up', [3, 4, 5], 6, true);
    // birdie.animations.add('right_up', [12, 13, 14], 6, true);
    // birdie.animations.add('left_down', [6, 7, 8], 6, true);
    // birdie.animations.add('right_down', [15, 16, 17], 6, true);
    // birdie.animations.add('shot', [24], 0, true);
    // birdie.animations.add('fall', [25], 0, true);
    
    fly1 = game.add.sprite(900, 580, 'fly')
    game.physics.arcade.enable(fly1);
    fly1.scale.x = game.rnd.realInRange(.8, .8);
    fly1.scale.y = game.rnd.realInRange(.8, .8);
    fly1.body.velocity.x = -80;
    fly1.animations.add('right', [0, 1], 15, true);
    fly1.animations.add('left', [2, 3], 15, true);

    // createFly(175, 490, 0, 'right');

    // createFly(900, 500, 0, 'left');

    // createFly(1900, 580, -80, 'left');

    // createFly(-40, 620, 80, 'right');

    // createFly(2400, 600, -90, 'left');

    // createFly(-600, 470, 90, 'right');
    

    cursors = game.input.keyboard.createCursorKeys();

  }

  function update(){

    game.physics.arcade.collide(frog, platforms);

    initiateAnimations = function(fowl)
    {
        if (fowl.body.velocity.x == 180 && fowl.body.velocity.y == 180)
        {
            fowl.animations.play('right_down')
        }
        else if (fowl.body.velocity.x == -180 && fowl.body.velocity.y == 180)
        {
            fowl.animations.play('left_down')
        }
        else if (fowl.body.velocity.x == 180 && fowl.body.velocity.y == -180)
        {
            fowl.animations.play('right_up')
        }
        else if (fowl.body.velocity.x == -180 && fowl.body.velocity.y == -180)
        {
            fowl.animations.play('left_up')
        }
        else if (fowl.body.velocity.x > 0)
        {
            fowl.animations.play('right')
        }
        else if (fowl.body.velocity.x < 0)
        {
            fowl.animations.play('left')
        }
        else if (fowl.body.velocity.y > 0 && (fowl.body.velocity.x < 140 && fowl.body.velocity.x > -140))
        {
            fowl.animations.play('down')
        }
        else if (fowl.body.velocity.y < 0 && (fowl.body.velocity.x < 140 && fowl.body.velocity.x > -140))
        {
            fowl.animations.play('up')
        }
    }

    // initiateAnimations(birdie);
    initiateAnimations(fly1);



    if (frog.body.touching.down)
    {
    frog.body.velocity.x = 0;
    }

    if (cursors.left.isDown)
    {
      // hop frog to left

      frog.animations.play('left');
      
      frog.body.velocity.x = -200

      if (frog.body.touching.down)
      {

      frog.body.velocity.y = -50

      }


    }
    else if (cursors.right.isDown)
    {
      // hop frog right

      frog.animations.play('right');
    
      frog.body.velocity.x = 200

      if (frog.body.touching.down)
      {

        frog.body.velocity.y = -50

      }

    }
    // else
    // {
    //   frog.animations.stop();

    //   frog.frame = 4;
    // }

    if (cursors.up.isDown && frog.body.touching.down)
    {
      frog.body.velocity.y = -450;
      if (cursors.left.isDown)
      {
        frog.body.velocity.x = -200

        frog.animations.play('left');
      }
      else if (cursors.right.isDown)
      {
        frog.body.velocity.x = 200

        frog.animations.play('right');
      }
    }

  }

  function render(){


  }

$(function(){
    $('body').hide();
    $('body').fadeIn(2000);

  })

  </script>