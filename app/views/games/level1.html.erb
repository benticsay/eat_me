<script type="text/javascript">

  var game = new Phaser.Game(1024, 768, Phaser.CANVAS, '', { preload: preload, create: create, update: update, render: render });



  function preload(){

    game.load.spritesheet('dude', '/images/dude.png', 32, 48);

    game.load.image('tree', '/images/tree.png');
    // level 1 images
    game.load.image('levelOneBackground', '/images/level_one_background-01.png');
    game.load.image('greenBackdrop', '/images/green_backdrop.png');
    game.load.image('whiteBackdrop', '/images/whiteBackground.png');
    game.load.image('acorn1', '/images/acorn_1.png');
    game.load.image('acorn2', '/images/acorn_2.png');
    game.load.image('acorn3', '/images/acorn_3.png');
    game.load.image('acorn4', '/images/acorn_4.png');
    game.load.image('acorn5', '/images/acorn_5.png');
    game.load.image('branch1', '/images/h_branch_2.png');
    game.load.image('branch2', '/images/h_branch_3.png');
    game.load.image('branch3', '/images/h_branch_4.png');
    game.load.image('branch4', '/images/h_branch_1.png');
    game.load.image('cobweb', '/images/cobweb.png');
    game.load.image('spider', '/images/spider.png');
    // game.load.spritesheet('branch-tiles', '/images/branch_1.png', 500, 500, 1);
    // game.load.spritesheet('branch-tiles', 'assets/physics/ninja-tiles128.png', 128, 128, 34);
    // game.load.spritesheet('branch-tiles', 'assets/physics/ninja-tiles128.png', 128, 128, 34);
  }

  var platforms;

  function create(){

    game.physics.startSystem(Phaser.Physics.ARCADE);

    game.add.image(0, 0, 'whiteBackdrop').scale.setTo(50,50);

    game.add.image(0, 0, 'levelOneBackground');

    game.add.image(6, 3, 'spider');



    // tile = game.add.sprite(600, 480, 'branch-tiles', 3);
    // game.physics.ninja.enableTile(tile, tile.frame);

    // game.add.image(0, 0, 1024, 768, 'greenBackdrop');


    // background = game.add.image(0, 0, 1024, 768, 'levelOneBackground');


    platforms = game.add.group();

    platforms.enableBody = true;

    acorns = game.add.group();

    acorns.enableBody = true;

    var ground = platforms.create(0, game.world.height -5, 'log1');

    ground.scale.setTo(50,3);

    ground.body.immovable = true;

    cursors = game.input.keyboard.createCursorKeys();

    acorn = ''

    // left side
    ledge = platforms.create(0, 120, 'branch1');
    ledge.scale.x = game.rnd.realInRange(2, 2);
    ledge.scale.y = game.rnd.realInRange(2, 2);
    ledge.body.immovable = true;

    // right side
    ledge = platforms.create(410, 275, 'branch2');
    ledge.scale.x = game.rnd.realInRange(2, 2);
    ledge.scale.y = game.rnd.realInRange(2, 2);
    ledge.body.immovable = true;

    // left side
    ledge = platforms.create(-50, 440, 'branch3');
    ledge.scale.x = game.rnd.realInRange(2, 2);
    ledge.scale.y = game.rnd.realInRange(2, 2);
    ledge.body.immovable = true;

    // right side
    ledge = platforms.create(410, 593, 'branch4');
    ledge.scale.x = game.rnd.realInRange(2, 2);
    ledge.scale.y = game.rnd.realInRange(2, 2);
    ledge.body.immovable = true;

    // left side
    ledge = platforms.create(-260, 750, 'branch1');
    ledge.scale.x = game.rnd.realInRange(4, 4);
    ledge.scale.y = game.rnd.realInRange(2, 2);
    ledge.body.immovable = true;

    var nuts = setInterval(acornBounce);
    function acornBounce() {
    acorn = acorns.create(0, 0, 'acorn1');
    acorn.body.velocity.x = 500;
    acorn.body.bounce.y = 0.1;
    acorn.body.gravity.y = 1000;
    nuts = setTimeout(acornBounce, 20000); // repeat myself
    }

    frog = game.add.sprite(700, 700, 'dude')
    game.physics.arcade.enable(frog);

    frog.body.bounce.y = 0.1;
    frog.body.gravity.y = 350;
    frog.body.collideWorldBounds = true;

    frog.animations.add('left', [0, 1, 2, 3], 10, true);
    frog.animations.add('right', [5, 6, 7, 8], 10, true);

    game.physics.arcade.enable(acorn);

    frog.body.collideWorldBounds = true;
    acorn.body.collideWorldBounds = true;

    cursors = game.input.keyboard.createCursorKeys();



  }

  function update(){

    game.physics.arcade.collide(frog, platforms);
    game.physics.arcade.collide(acorn, platforms);
    game.physics.arcade.collide(acorn, frog);

    frog.body.velocity.x = 0;

    if (cursors.left.isDown)
    {
        //  Move to the left
        frog.body.velocity.x = -180;

        frog.animations.play('left');
    }
    else if (cursors.right.isDown)
    {
        //  Move to the right
        frog.body.velocity.x = 180;

        frog.animations.play('right');
    }
    else
    {
        //  Stand still
        frog.animations.stop();

        frog.frame = 4;
    }
    
    //  Allow the player to jump if they are touching the ground.
    if (cursors.up.isDown && frog.body.touching.down)
    {
        frog.body.velocity.y = -350;
    }

    // spinningWheel.angle += 1;


    // game.physics.arcade.collide(frog, spinningWheel)

    // if (frog.body.touching.down)
    // {
    // frog.body.velocity.x = 0;
    // }

    // if (cursors.left.isDown)
    // {
    //   // hop frog to left
    //   frog.body.moveLeft(20);

    //   // frog.animations.play('left');
    // }
    // else if (cursors.right.isDown)
    // {
    //   // hop frog right
    //   frog.body.moveRight(20);

    //   // frog.animations.play('right');

    // }
    // else
    // {
    //   frog.animations.stop();

    //   frog.frame = 4;
    // }

    // if (cursors.up.isDown && frog.body.touching.down)
    // {
    //   frog.body.velocity.y = -450;
    //   if (cursors.left.isDown)
    //   {
    //     frog.body.velocity.x = -200

    //     frog.animations.play('left');
    //   }
    //   else if (cursors.right.isDown)
    //   {
    //     frog.body.velocity.x = 200

    //     frog.animations.play('right');
    //   }
    // }

  }

  function render(){

    // game.debug.cameraInfo(game.camera, 32, 32);

  }


  </script>




