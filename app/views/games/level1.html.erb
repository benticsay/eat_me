<script type="text/javascript">

  var game = new Phaser.Game(1024, 768, Phaser.CANVAS, '', { preload: preload, create: create, update: update, render: render });



  function preload(){

    // todo: maybe load with offset *******************

    game.load.spritesheet('dude', '/images/bug_sprite_sheet1.png', 95.2, 124);

    game.load.image('tree', '/images/tree.png');
    // level 1 images
    game.load.image('levelOneBackground', '/images/level_one_background-01.png');
    game.load.image('greenBackdrop', '/images/green_backdrop.png');
    game.load.image('whiteBackdrop', '/images/whiteBackground.png');
    game.load.image('acorn1', '/images/acorn_1.png');
    game.load.image('acorn2', '/images/acorn_2.png');
    game.load.image('acorn3', '/images/acorn_3.png');
    game.load.image('acorn4', '/images/acorn_4.png');
    game.load.image('acorn5', '/images/acorn_5.png');
    game.load.image('branch1', '/images/h_branch_2.png');
    game.load.image('branch2', '/images/h_branch_3.png');
    game.load.image('branch3', '/images/h_branch_4.png');
    game.load.image('branch4', '/images/h_branch_1.png');
    game.load.image('cobweb', '/images/cobweb.png');
    game.load.image('spider', '/images/spider_bigger_face.png');
    // game.load.spritesheet('branch-tiles', '/images/branch_1.png', 500, 500, 1);
    // game.load.spritesheet('branch-tiles', 'assets/physics/ninja-tiles128.png', 128, 128, 34);
    // game.load.spritesheet('branch-tiles', 'assets/physics/ninja-tiles128.png', 128, 128, 34);
  }

  var platforms;
    var acorns;
    var acorn2;
    var spider;

  function create(){

    game.physics.startSystem(Phaser.Physics.ARCADE);

    game.add.image(0, 0, 'whiteBackdrop').scale.setTo(50,50);

    game.add.image(0, 0, 'levelOneBackground');

    // spider = game.add.image(6, 3, 'spider');




    // tile = game.add.sprite(600, 480, 'branch-tiles', 3);
    // game.physics.ninja.enableTile(tile, tile.frame);

    // game.add.image(0, 0, 1024, 768, 'greenBackdrop');


    // background = game.add.image(0, 0, 1024, 768, 'levelOneBackground');


    platforms = game.add.group();

    platforms.enableBody = true;

    acorns = game.add.group();
    acorns.enableBody = true;

    // game.physics.arcade.enable(acorns);

    acorn2 = game.add.group();
    acorn2.enableBody = true;

    // game.physics.arcade.enable(acorns2);

    spider = game.add.group();
    spider.enableBody = true;

    var spiderGoal = spider.create(6, 3, 'spider');
    spiderGoal.scale.x = game.rnd.realInRange(.8, .8);
    spiderGoal.scale.y = game.rnd.realInRange(.8, .8);
    // spiderGoal.body.immovable = true;

    var ground = platforms.create(0, game.world.height -5, 'log1');

    ground.scale.setTo(50,3);

    ground.body.immovable = true;

    cursors = game.input.keyboard.createCursorKeys();

    
    function createBranch(x, y, image, size) {
        branch = platforms.create(x, y, image);
        branch.scale.x = game.rnd.realInRange(size, size);
        branch.scale.y = game.rnd.realInRange(size, size);
        branch.body.immovable = true;       
    }

    function createLedge(x, y, image, size) {
        ledge = platforms.create(x, y, image);
        ledge.scale.x = game.rnd.realInRange(size, size);
        ledge.scale.y = game.rnd.realInRange(size, size);
        ledge.body.immovable = true;       
    }


    // left side
    createBranch(0, 120, 'branch1', 2);

    // right side
    createBranch(410, 275, 'branch2', 2);

    // left side
    createBranch(-50, 440, 'branch3', 2);

    // right side
    createBranch(410, 593, 'branch4', 2);

    // left side
    createBranch(-260, 750, 'branch3', 4);

    // // var nuts = setInterval(acornBounce, 3000);
    // function acornBounce() {
    // acorn = acorns.create(0, 0, 'acorn1');
    // acorn.enableBody = true;
    // game.physics.arcade.enable(acorn);
    // acorn.exist = true;
    // acorn.body.velocity.x = 500;
    // acorn.body.bounce.y = 0.1;
    // acorn.body.gravity.y = 1000;
    // // nuts = setTimeout(acornBounce, 20000); // repeat myself
    // }
    // acornBounce();

    // function acornBounce2() {
    // acorn = acorn2.create(0, 300, 'acorn2');
    // // acorn.enableBody = true;
    // acorn.body.velocity.x = 500;
    // acorn.body.bounce.y = 0.1;
    // acorn.body.gravity.y = 1000;
    // }
    // acornBounce2();



    game.time.events.loop(Phaser.Timer.SECOND * 3, acornLaunch, this);
    acornLaunch();
    function acornLaunch() {
    acorn = platforms.create(0, 68, 'acorn1');
    acorn.body.immovable = true;
    acorn.enableBody = true;
    game.physics.arcade.enable(acorn);
    acorn.exist = true;

    acorn.body.velocity.x = 500;
    acorn.body.bounce.y = 0.1;
    acorn.scale.setTo(1.2,1.2);


    // acorn.body.gravity.y = 1000;

    acorn1 = platforms.create(1000, 235, 'acorn3');
    acorn1.body.immovable = true;
    acorn.enableBody = true;
    game.physics.arcade.enable(acorn);
    acorn.exist = true;

    acorn1.body.velocity.x = -500;
    acorn1.body.bounce.y = 0.1;
    acorn1.scale.setTo(1.5,1.5);
    // acorn1.body.gravity.y = 1000;

    acorn2 = platforms.create(0, 400, 'acorn4');
    acorn2.body.immovable = true;
    acorn.enableBody = true;
    game.physics.arcade.enable(acorn);
    acorn.exist = true;
    acorn2.body.velocity.x = 500;
    acorn2.body.bounce.y = 0.1;
    acorn2.scale.setTo(1.5,1.5);
    // acorn2.body.gravity.y = 1000;


    acorn3 = platforms.create(1000, 547, 'acorn2');
    acorn3.body.immovable = true;
    acorn.enableBody = true;
    game.physics.arcade.enable(acorn);
    acorn.exist = true;

    acorn3.body.velocity.x = -500;
    acorn3.body.bounce.y = 0.1;
    // acorn3.body.gravity.y = 1000;
    acorn3.scale.setTo(1.5,1.5);
    }

    beetle = game.add.sprite(700, 600, 'dude')
    beetle.scale.x = game.rnd.realInRange(.4, .4);
    beetle.scale.y = game.rnd.realInRange(.4, .4);

    game.physics.arcade.enable(beetle);

    beetle.body.bounce.y = 0.1;
    beetle.body.gravity.y = 350;
    beetle.body.collideWorldBounds = true;

    beetle.animations.add('left', [0, 1], 5, true);
    beetle.animations.add('right', [3, 4], 5, true);

    game.physics.arcade.enable(acorn);

    beetle.body.collideWorldBounds = true;
    acorn.body.collideWorldBounds = false;

    cursors = game.input.keyboard.createCursorKeys();

  }



  function update(){

    game.physics.arcade.collide(beetle, platforms);
    game.physics.arcade.collide(acorn, platforms);
    game.physics.arcade.collide(acorn, beetle);
    game.physics.arcade.collide(platforms, platforms);
    game.physics.arcade.collide(spider, beetle);

    game.physics.arcade.overlap(beetle, spider, winFunc, null, this);

    function winFunc(beetle, spider){
        beetle.kill();
        console.log('WINNER!');
    }

    beetle.body.velocity.x = 0;

    if (cursors.left.isDown)
    {
        //  Move to the left
        beetle.body.velocity.x = -180;

        beetle.animations.play('left');
    }
    else if (cursors.right.isDown)
    {
        //  Move to the right
        beetle.body.velocity.x = 180;

        beetle.animations.play('right');
    }
    else
    {
        //  Stand still
        beetle.animations.stop();

        beetle.frame = 2;
    }
    
    //  Allow the player to jump if they are touching the ground.
    if (cursors.up.isDown && beetle.body.touching.down)
    {
        beetle.body.velocity.y = -350;
    }


  }

  function render(){

    // game.debug.cameraInfo(game.camera, 32, 32);

  }


  </script>




