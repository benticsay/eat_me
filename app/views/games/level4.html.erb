<script type="text/javascript">

  var game = new Phaser.Game(1024, 768, Phaser.AUTO, '', { preload: preload, create: create, update: update, render: render });

  function preload(){

    game.load.spritesheet('dude', '/images/dude.png', 32, 48);

    game.load.image('background', '/images/background.png');
    game.load.image('cloud1', '/images/cloud_1.png');
    game.load.image('cloud2', '/images/cloud_2.png');
    game.load.image('cloud3', '/images/cloud_3.png');
    game.load.image('cloud4', '/images/cloud_4.png');
    game.load.image('cloud5', '/images/cloud_5.png');
    game.load.image('cloud6', '/images/cloud_6.png');
    game.load.image('tree', '/images/tree.png');
    game.load.image('grass1', '/images/grass_1.png');
    game.load.image('smilingfrog', '/images/frog_mouth_open.png');
    game.load.image('frog', '/images/frog_mouth_closed.png');
    game.load.image('crosshair', '/images/crosshair.png');
    game.load.spritesheet('bird', '/images/birds.png', 84, 80)

    game.load.image('birds', '/images/birds.png')

    game.load.spritesheet('bird1', '/images/bird_sprite.png', 84, 80)
    game.load.spritesheet('bird2', '/images/bird sprite2.png', 142, 136.5)
    game.load.spritesheet('bird3', '/images/bird sprite3.png', 142, 136.5)
    game.load.spritesheet('bird4', '/images/bird sprite4.png', 142, 136.5)
    game.load.spritesheet('bird5', '/images/bird sprite5.png', 142, 136.5)
    game.load.spritesheet('bird6', '/images/bird sprite6.png', 142, 136.5)
    game.load.spritesheet('bird7', '/images/bird sprite7.png', 142, 136.5)
    game.load.spritesheet('bird8', '/images/bird sprite8.png', 142, 136.5)
    game.load.spritesheet('bird9', '/images/bird sprite9.png', 142, 136.5)
    game.load.spritesheet('bird10', '/images/bird sprite10.png', 142, 136.5)
    game.load.spritesheet('bird11', '/images/bird sprite11.png', 142, 136.5)
  }

  var platforms;

  function create(){

    game.physics.startSystem(Phaser.Physics.ARCADE);

    background = game.add.image(0, 0, 'background');
    background.scale.x = game.rnd.realInRange(4, 4);
    background.scale.y = game.rnd.realInRange(4, 4);

    // crosshair = game.add.image(0, 0, 'crosshair');
    // crosshair.scale.x = game.rnd.realInRange(.15, .15);
    // crosshair.scale.y = game.rnd.realInRange(.15, .15);
    // crosshair.enableBody = true;

    // cloud1 = game.add.image(0, 15, 'cloud1');
    // cloud1.anchor.setTo(-.1, -.1);

    // cloud2 = game.add.image(0, 380, 'cloud2');
    // cloud2.anchor.setTo(-.1, -.1);

    // cloud3 = game.add.image(335, 85, 'cloud3');
    // cloud3.anchor.setTo(-.1, -.1);

    // cloud4 = game.add.image(595, 270, 'cloud4');
    // cloud4.anchor.setTo(-.1, -.1);

    // cloud5 = game.add.image(650, 30, 'cloud5');
    // cloud5.anchor.setTo(-.1, -.1);

    // cloud6 = game.add.image(854, 258, 'cloud6');
    // cloud6.anchor.setTo(-.1, -.1);

    // birds = game.add.image(200,400,'birds');


    cursors = game.input.keyboard.createCursorKeys();

    bird = game.add.sprite(0, 400, 'bird1');
    game.physics.arcade.enable(bird);
    // bird.anchor.set(0.5);

    // bird.body.drag.set(100);
    // bird.body.maxVelocity.set(200);

    bird.body.collideWorldBounds = true;

    bird.animations.add('left', [0, 1, 2], 6, true);
    bird.animations.add('right', [9, 10, 11], 6, true);
    bird.animations.add('up', [21, 22, 23], 6, true);
    bird.animations.add('down', [18, 19, 20], 6, true);
    bird.animations.add('left_up', [3, 4, 5], 6, true);
    bird.animations.add('right_up', [12, 13, 14], 6, true);
    bird.animations.add('left_down', [6, 7, 8], 6, true);
    bird.animations.add('right_down', [15, 16, 17], 6, true);
    bird.animations.add('shot', [24], 0, true);
    bird.animations.add('fall', [25], 0, true)

    bird.body.collideWorldBounds = true;

    cursors = game.input.keyboard.createCursorKeys();

            crosshair = game.add.sprite(0, 0, 'crosshair')
        crosshair.scale.x = game.rnd.realInRange(.15, .15);
        crosshair.scale.y = game.rnd.realInRange(.15, .15);
        game.physics.arcade.enable(crosshair);
        crosshair.body.collideWorldBounds = true;
        // crosshair.body.velocity.x = Math.random()*100;
        // crosshair.body.velocity.y = Math.random()*100;

        //        this.minSpeed = -75;
        // this.maxSpeed = 75;
        // this.vx = Math.random()*(this.maxSpeed - this.minSpeed+1)-this.minSpeed;
        // this.vy = Math.random()*(this.maxSpeed - this.minSpeed+1)-this.minSpeed;


  }

  function update(){

    game.physics.arcade.collide(bird, platforms);

    if (cursors.up.isDown)
    {
        if (cursors.left.isDown)
        {
            bird.body.velocity.y = -180;

            bird.body.velocity.x = -180

            bird.animations.play('left_up');
        }
        else if (cursors.right.isDown)
        {
            bird.body.velocity.y = -180;

            bird.body.velocity.x = 180

            bird.animations.play('right_up');
        }
        else
        {
            bird.body.velocity.y = -180;

            bird.animations.play('up');
        }
    }
    else if (cursors.down.isDown)
    {
        if (cursors.left.isDown)
        {
            bird.body.velocity.y = 180;

            bird.body.velocity.x = -180

            bird.animations.play('left_down');
        }
        else if (cursors.right.isDown)
        {
            bird.body.velocity.y = 180;

            bird.body.velocity.x = 180

            bird.animations.play('right_down');
        }
        else
        {
            bird.body.velocity.y = 180;

            bird.animations.play('down');
        }
    }
    else if (cursors.left.isDown)
    {
        bird.body.velocity.x = -180;

        bird.animations.play('left');
    }
    else if (cursors.right.isDown)
    {
        bird.body.velocity.x = 180;

        bird.animations.play('right');
    }
    else
    {
        bird.animations.play('up');
    }
    // if (cursors.up.isDown)
    // {
    //     game.physics.arcade.accelerationFromRotation(bird.rotation, 200, bird.body.acceleration);
    // }
    // else
    // {
    //     bird.body.acceleration.set(0);
    // }

    // if (cursors.left.isDown)
    // {
    //     bird.body.angularVelocity = -300;
    // }
    // else if (cursors.right.isDown)
    // {
    //     bird.body.angularVelocity = 300;
    // }
    // else
    // {
    //     bird.body.angularVelocity = 0;
    // }

    // if (cursors.up.isDown)
    // {
    //     game.physics.arcade.accelerationFromRotation(bird.rotation, 200, bird.body.acceleration);
    // }
    // else
    // {
    //     bird.body.acceleration.set(0);
    // }

    // if (cursors.left.isDown)
    // {
    //     bird.body.angularVelocity = -300;
    // }
    // else if (cursors.right.isDown)
    // {
    //     bird.body.angularVelocity = 300;
    // }
    // else
    // {
    //     bird.body.angularVelocity = 0;
    // }

    // function for cross hair movement
        // crosshair.body.velocity.y = Math.random()*100;

  }

  function render(){


  }

  </script>