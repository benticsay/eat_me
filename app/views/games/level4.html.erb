<script type="text/javascript">

var game = new Phaser.Game(1024, 768, Phaser.AUTO, '', { preload: preload, create: create, update: update, render: render });

// // creating our bird friends (not really enemies)
//       Enemy = function(){
//         this.x = game.world.randomX;
//         this.y = game.world.randomY;
//         this.minSpeed = -75;
//         this.maxSpeed = 75;
//         this.vx = Math.random()*(this.maxSpeed - this.minSpeed+1)-this.minSpeed;
//         this.vy = Math.random()*(this.maxSpeed - this.minSpeed+1)-this.minSpeed;

//         this.enemySprite = game.add.sprite(this.x,this.y,random_bird);
//         this.enemySprite.anchor.setTo(0.5, 0.5);
//         this.enemySprite.body.collideWorldBounds = true;
//         this.enemySprite.body.bounce.setTo(1, 1);
//         this.enemySprite.body.velocity.x = this.vx;
//         this.enemySprite.body.velocity.y = this.vy;
//         this.enemySprite.body.immovable = true;
//     }

function preload(){

    game.load.spritesheet('dude', '/images/dude.png', 32, 48);

    game.load.image('background', '/images/background.png');
    game.load.image('cloud1', '/images/cloud_1.png');
    game.load.image('cloud2', '/images/cloud_2.png');
    game.load.image('cloud3', '/images/cloud_3.png');
    game.load.image('cloud4', '/images/cloud_4.png');
    game.load.image('cloud5', '/images/cloud_5.png');
    game.load.image('cloud6', '/images/cloud_6.png');
    game.load.image('tree', '/images/tree.png');
    game.load.image('grass1', '/images/grass_1.png');
    game.load.image('smilingfrog', '/images/frog_mouth_open.png');
    game.load.image('frog', '/images/frog_mouth_closed.png');
    game.load.image('crosshair', '/images/crosshair.png');
    game.load.spritesheet('player_bird', '/images/bird sprite-1.png', 84, 80)
    game.load.spritesheet('bird1', '/images/bird sprite1-1.png', 84, 80)
    game.load.spritesheet('bird2', '/images/bird sprite2-1.png', 84, 80)
    game.load.spritesheet('bird3', '/images/bird sprite3-1.png', 84, 80)
    game.load.spritesheet('bird4', '/images/bird sprite4-1.png', 84, 80)
    game.load.spritesheet('bird5', '/images/bird sprite5-1.png', 84, 80)
    game.load.spritesheet('bird6', '/images/bird sprite6-1.png', 84, 80)
    game.load.spritesheet('bird7', '/images/bird sprite7-1.png', 84, 80)
    game.load.spritesheet('bird8', '/images/bird sprite8-1.png', 84, 80)
    game.load.spritesheet('bird9', '/images/bird sprite9-1.png', 84, 80)
    game.load.spritesheet('bird10', '/images/bird sprite10-1.png', 84, 80)
    game.load.spritesheet('bird11', '/images/bird sprite11-1.png', 84, 80)
}

var flightedAnimal;
var birdie;
var birds;
var crosshair;
var cursors;
var background;
var player_bird;
var friendly_bird;

function create(){

    game.physics.startSystem(Phaser.Physics.ARCADE);
    cursors = game.input.keyboard.createCursorKeys();

    // background image and scaled
    background = game.add.image(0, 0, 'background');
    background.scale.x = game.rnd.realInRange(4, 4);
    background.scale.y = game.rnd.realInRange(4, 4);


    // randomized bird sprites
    randomBird = function()
    {
        var bird_array = ["player_bird", "bird1", "bird2", "bird3", "bird4", "bird5", "bird6", "bird7", "bird8", "bird9"]
        color = bird_array[Math.floor(bird_array.length * Math.random())];
        return color
    }


    // bird = bird.create(0, 400, random_bird);


    birdFriend1 = game.add.sprite(game.world.randomX, game.world.randomY, randomBird())
    birdFriend1.enableBody = true;
    game.physics.arcade.enable(birdFriend1);
    birdFriend1.body.collideWorldBounds = true;
    birdFriend1.minSpeed = -180;
    birdFriend1.maxSpeed = 180;
    birdFriend1.body.velocity.x = 180
    birdFriend1.body.velocity.y = 180
    birdFriend1.body.bounce.setTo(1, 1);
    birdFriend1.body.immovable = true;

    birdFriend2 = game.add.sprite(game.world.randomX, game.world.randomY, randomBird())
    birdFriend2.enableBody = true;
    game.physics.arcade.enable(birdFriend2);
    birdFriend2.body.collideWorldBounds = true;
    birdFriend2.minSpeed = -180;
    birdFriend2.maxSpeed = 180;
    birdFriend2.body.velocity.x = -180
    birdFriend2.body.velocity.y = -180
    birdFriend2.body.bounce.setTo(1, 1);
    birdFriend2.body.immovable = true;

    birdFriend3 = game.add.sprite(game.world.randomX, game.world.randomY, randomBird())
    birdFriend3.enableBody = true;
    game.physics.arcade.enable(birdFriend3);
    birdFriend3.body.collideWorldBounds = true;
    birdFriend3.minSpeed = -180;
    birdFriend3.maxSpeed = 180;
    birdFriend3.body.velocity.x = 180
    birdFriend3.body.velocity.y = -180
    birdFriend3.body.bounce.setTo(1, 1);
    birdFriend3.body.immovable = true;


    birdFriend4 = game.add.sprite(game.world.randomX, game.world.randomY, randomBird())
    birdFriend4.enableBody = true;
    game.physics.arcade.enable(birdFriend4);
    birdFriend4.body.collideWorldBounds = true;
    birdFriend4.minSpeed = -180;
    birdFriend4.maxSpeed = 180;
    birdFriend4.body.velocity.x = -180
    birdFriend4.body.velocity.y = 180
    birdFriend4.body.bounce.setTo(1, 1);
    birdFriend4.body.immovable = true;

    birdFriend5 = game.add.sprite(game.world.randomX, 400, randomBird())
    birdFriend5.enableBody = true;
    game.physics.arcade.enable(birdFriend5);
    birdFriend5.body.collideWorldBounds = true;
    birdFriend5.minSpeed = -180;
    birdFriend5.maxSpeed = 180;
    birdFriend5.body.velocity.x = 180
    birdFriend5.body.velocity.y = 0
    birdFriend5.body.bounce.setTo(1, 1);
    birdFriend5.body.immovable = true;

    birdFriend6 = game.add.sprite(game.world.randomX, 300, randomBird())
    birdFriend6.enableBody = true;
    game.physics.arcade.enable(birdFriend6);
    birdFriend6.body.collideWorldBounds = true;
    birdFriend6.minSpeed = -180;
    birdFriend6.maxSpeed = 180;
    birdFriend6.body.velocity.x = -180
    birdFriend6.body.velocity.y = 0
    birdFriend6.body.bounce.setTo(1, 1);
    birdFriend6.body.immovable = true;

    birdie = game.add.sprite(game.world.randomX, game.world.randomY, 'bird10')
    birdie.enableBody = true;
    game.physics.arcade.enable(birdie);
    birdie.body.collideWorldBounds = true;

    crosshair = game.add.sprite(game.world.randomX, 300, 'crosshair');
    crosshair.scale.x = game.rnd.realInRange(.15, .15);
    crosshair.scale.y = game.rnd.realInRange(.15, .15);
    crosshair.enableBody = true;
    game.physics.arcade.enable(crosshair);
    crosshair.body.collideWorldBounds = true;
    crosshair.minSpeed = -150;
    crosshair.maxSpeed = 150;
    crosshair.body.velocity.x = -150;
    crosshair.body.velocity.y = 150;
    crosshair.body.bounce.setTo(1, 1);


    birdie.animations.add('left', [0, 1, 2], 6, true);
    birdFriend1.animations.add('left', [0, 1, 2], 6, true);
    birdFriend2.animations.add('left', [0, 1, 2], 6, true);
    birdFriend3.animations.add('left', [0, 1, 2], 6, true);
    birdFriend4.animations.add('left', [0, 1, 2], 6, true);
    birdFriend5.animations.add('left', [0, 1, 2], 6, true);
    birdFriend6.animations.add('left', [0, 1, 2], 6, true);

    birdie.animations.add('right', [9, 10, 11], 6, true);
    birdFriend1.animations.add('right', [9, 10, 11], 6, true);
    birdFriend2.animations.add('right', [9, 10, 11], 6, true);
    birdFriend3.animations.add('right', [9, 10, 11], 6, true);
    birdFriend4.animations.add('right', [9, 10, 11], 6, true);
    birdFriend5.animations.add('right', [9, 10, 11], 6, true);
    birdFriend6.animations.add('right', [9, 10, 11], 6, true);

    birdie.animations.add('up', [21, 22, 23], 6, true);
    birdFriend1.animations.add('up', [21, 22, 23], 6, true);
    birdFriend2.animations.add('up', [21, 22, 23], 6, true);
    birdFriend3.animations.add('up', [21, 22, 23], 6, true);
    birdFriend4.animations.add('up', [21, 22, 23], 6, true);
    birdFriend5.animations.add('up', [21, 22, 23], 6, true);
    birdFriend6.animations.add('up', [21, 22, 23], 6, true);

    birdie.animations.add('down', [18, 19, 20], 6, true);
    birdFriend1.animations.add('down', [18, 19, 20], 6, true);
    birdFriend2.animations.add('down', [18, 19, 20], 6, true);
    birdFriend3.animations.add('down', [18, 19, 20], 6, true);
    birdFriend4.animations.add('down', [18, 19, 20], 6, true);
    birdFriend5.animations.add('down', [18, 19, 20], 6, true);
    birdFriend6.animations.add('down', [18, 19, 20], 6, true);

    birdie.animations.add('left_up', [3, 4, 5], 6, true);
    birdFriend1.animations.add('left_up', [3, 4, 5], 6, true);
    birdFriend2.animations.add('left_up', [3, 4, 5], 6, true);
    birdFriend3.animations.add('left_up', [3, 4, 5], 6, true);
    birdFriend4.animations.add('left_up', [3, 4, 5], 6, true);
    birdFriend5.animations.add('left_up', [3, 4, 5], 6, true);
    birdFriend6.animations.add('left_up', [3, 4, 5], 6, true);

    birdie.animations.add('right_up', [12, 13, 14], 6, true);
    birdFriend1.animations.add('right_up', [12, 13, 14], 6, true);
    birdFriend2.animations.add('right_up', [12, 13, 14], 6, true);
    birdFriend3.animations.add('right_up', [12, 13, 14], 6, true);
    birdFriend4.animations.add('right_up', [12, 13, 14], 6, true);
    birdFriend5.animations.add('right_up', [12, 13, 14], 6, true);
    birdFriend6.animations.add('right_up', [12, 13, 14], 6, true);

    birdie.animations.add('left_down', [6, 7, 8], 6, true);
    birdFriend1.animations.add('left_down', [6, 7, 8], 6, true);
    birdFriend2.animations.add('left_down', [6, 7, 8], 6, true);
    birdFriend3.animations.add('left_down', [6, 7, 8], 6, true);
    birdFriend4.animations.add('left_down', [6, 7, 8], 6, true);
    birdFriend5.animations.add('left_down', [6, 7, 8], 6, true);
    birdFriend6.animations.add('left_down', [6, 7, 8], 6, true);

    birdie.animations.add('right_down', [15, 16, 17], 6, true);
    birdFriend1.animations.add('right_down', [15, 16, 17], 6, true);
    birdFriend2.animations.add('right_down', [15, 16, 17], 6, true);
    birdFriend3.animations.add('right_down', [15, 16, 17], 6, true);
    birdFriend4.animations.add('right_down', [15, 16, 17], 6, true);
    birdFriend5.animations.add('right_down', [15, 16, 17], 6, true);
    birdFriend6.animations.add('right_down', [15, 16, 17], 6, true);

    birdie.animations.add('shot', [24], 0, true);
    birdFriend1.animations.add('shot', [24], 0, true);
    birdFriend2.animations.add('shot', [24], 0, true);
    birdFriend3.animations.add('shot', [24], 0, true);
    birdFriend4.animations.add('shot', [24], 0, true);
    birdFriend5.animations.add('shot', [24], 0, true);
    birdFriend6.animations.add('shot', [24], 0, true);

    birdie.animations.add('fall', [25], 0, true);
    birdFriend1.animations.add('fall', [25], 0, true);
    birdFriend2.animations.add('fall', [25], 0, true);
    birdFriend3.animations.add('fall', [25], 0, true);
    birdFriend4.animations.add('fall', [25], 0, true);
    birdFriend5.animations.add('fall', [25], 0, true);
    birdFriend6.animations.add('fall', [25], 0, true);


    }

    var fowl;

function update(){

    // game.physics.arcade.collide(bird, crosshair);

    initiateControls = function(fowl)
    {

        if (cursors.up.isDown)
        {
            if (cursors.left.isDown)
            {
                fowl.body.velocity.y = -180;

                fowl.body.velocity.x = -180;

            }
            else if (cursors.right.isDown)
            {
                fowl.body.velocity.y = -180;

                fowl.body.velocity.x = 180;

            }
            else
            {
                fowl.body.velocity.y = -180;

                fowl.body.velocity.x *= .99;

            }
        }
        else if (cursors.down.isDown)
        {
            if (cursors.left.isDown)
            {
                fowl.body.velocity.y = 180;

                fowl.body.velocity.x = -180;

            }
            else if (cursors.right.isDown)
            {
                fowl.body.velocity.y = 180;

                fowl.body.velocity.x = 180;

            }
            else
            {
                fowl.body.velocity.y = 180;

                fowl.body.velocity.x *= .99;

            }
        }
        else if (cursors.left.isDown)
        {
            fowl.body.velocity.x = -180;

            fowl.body.velocity.y *= .5;

        }
        else if (cursors.right.isDown)
        {
            fowl.body.velocity.x = 180;

            fowl.body.velocity.y *= .5;

        }

    }


            //crosshair bang functionality
    game.time.events.loop(Phaser.Timer.SECOND * 5, crosshairBang, this);

        function crosshairBang(){

       
        game.physics.arcade.collide(fowl, crosshair);
        game.physics.arcade.overlap(fowl, crosshair, winFunc, null, this);
        console.log('BANG!');
        game.stage.backgroundColor = '#992d2d';


            function winFunc(){
                // add functionality for bug to seem to go behind spider and hit hidden div
                console.log('WINNER!');
             }



    }




    initiateAnimations = function(fowl)
    {
        if (fowl.body.velocity.x == 180 && fowl.body.velocity.y == 180)
        {
            fowl.animations.play('right_down')
        }
        else if (fowl.body.velocity.x == -180 && fowl.body.velocity.y == 180)
        {
            fowl.animations.play('left_down')
        }
        else if (fowl.body.velocity.x == 180 && fowl.body.velocity.y == -180)
        {
            fowl.animations.play('right_up')
        }
        else if (fowl.body.velocity.x == -180 && fowl.body.velocity.y == -180)
        {
            fowl.animations.play('left_up')
        }
        else if (fowl.body.velocity.x >= 180)
        {
            fowl.animations.play('right')
        }
        else if (fowl.body.velocity.x <= -180)
        {
            fowl.animations.play('left')
        }
        else if (fowl.body.velocity.y > 0 && (fowl.body.velocity.x < 140 && fowl.body.velocity.x > -140))
        {
            fowl.animations.play('down')
        }
        else if (fowl.body.velocity.y < 0 && (fowl.body.velocity.x < 140 && fowl.body.velocity.x > -140))
        {
            fowl.animations.play('up')
        }
    }


    initiateAnimations(birdie);
    initiateAnimations(birdFriend1);
    initiateAnimations(birdFriend2);
    initiateAnimations(birdFriend3);
    initiateAnimations(birdFriend4);
    initiateAnimations(birdFriend5);
    initiateAnimations(birdFriend6);

    initiateControls(birdie);

}



function render(){


}

$(function(){
    $('body').hide();
    $('body').fadeIn(2000);
})

</script>